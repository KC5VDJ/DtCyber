<p>
Use the NEW and TEXT commands to create a SYMPL source file, use the SYMPL command to compile it, use the LOAD
command to link it with an assembly language module, and use the EXECUTE command to run the executable file
produced. Note that the SYMPL language has no built-in I/O capability, so a small assembly language module is
created to provide for output. The NEW, TEXT, MODIFY, and COMPASS commands are used in creating the assembly
language module.
</p>
<p>
First, create the assembly language module:
</p>
<pre>
     /NEW,SOURCE
     /TEXT
       <i>Enter assembly language module source code
       Exit TEXT mode by pressing Control-T key</i>
     /MODIFY,P=0,N=NPL,C=0,F,LO=E,Z./*CREATE SOURCE
     /ATTACH,OPL=OPL871/UN=INSTALL
     /MODIFY,P=NPL,LO=E,Z./*EDIT IOMOD
     /COMPASS,I,B=OUTLGO,S=SYSTEXT,S=PSSTEXT
</pre>
<p>
Next, create the SYMPL program, link it with the assembly language module, and run the executable produced:
</p>
<pre>
     /NEW,<i>filename</i>/ND
     /TEXT
     /SYMPL,I=<i>filename</i>,L=0
     /LOAD,LGO,OUTLGO
     /EXECUTE,FIB
</pre>
<p>References:
 <ul>
  <li>
   <a href="http://bitsavers.trailing-edge.com/pdf/cdc/Tom_Hunter_Scans/COMPASS_v3_Reference_Manual.60492600.1979_.pdf" target="_blank">
   COMPASS Version 3 Reference Manual
   </a>
  </li>
  <li>
   <a href="http://www.bitsavers.org/pdf/cdc/Tom_Hunter_Scans/Modify_RefMan_Sept85.pdf" target="_blank">
   MODIFY Reference Manual
   </a>
  <li>
   <a href="http://bitsavers.trailing-edge.com/pdf/cdc/Tom_Hunter_Scans/NOS_2_Reference_Set_Vol_3_System_Commands_60459680L_Dec88.pdf" target="_blank">
   NOS 2 Reference Set Volume 3 System Commands
   </a>
  </li>
  <li>
   <a href="http://bitsavers.trailing-edge.com/pdf/cdc/Tom_Hunter_Scans/Sympl_Version_1_Reference_Manual.60496400F.1980.pdf" target="_blank">
   SYMPL Version 1 Reference Manual
   </a>
  </li>
 </ul>
</p>
~~~~
Lnew,source
W^/$
Ltext
W ENTER TEXT MODE
W\\r
I250 \\r =====
IOMOD
          IDENT  IOMOD
          ENTRY  FLUSH
          ENTRY  OUT
          SYSCOM B1

*CALLC COMCCDD

 OBUFL    EQU    301B        OUTPUT BUFFER LENGTH

**        OUT(I, V)
*
*         OUTPUT TWO DECIMAL NUMBERS, AN INDEX AND A VALUE
*
*           I - INDEX
*           V - VALUE
*

 OUT      SUBR
          SB1    1
          SA2    A1+B1       ADDRESS OF V
          SA1    X1          I
          SA2    X2          V
          BX6    X1
          BX7    X2
          SA7    V           SAVE V
          RJ     CDD         CONVERT I TO DECIMAL DIGITS
          LX6    6           ENSURE THAT THERE'S A BLANK TO THE RIGHT
          WRITEO O           AND OUTPUT
          SA1    V
          BX6    X1
          RJ     CDD         CONVERT V TO DECIMAL
          BX6    X4          USE THE LEFT-JUSTIFIED RESULT
          WRITEO O           AND OUTPUT IT
          BX6    X6-X6       OUTPUT END OF LINE
          WRITEO O
          EQ     OUTX

**        FLUSH
*
*         FLUSH OUTPUT BUFFER
*

 FLUSH    SUBR
          SB1    1
          WRITER O           WRITE END OF RECORD
          EQ     FLUSHX

 V        BSS    1

 O        BSS    0
 OUTPUT   FILEB  OBUF,OBUFL
 OBUF     BSS    OBUFL

          END    IOMOD
=====
S\x14
W EXIT TEXT MODE
W^/$
D1000
Smodify,p=0,n=npl,c=0,f,lo=e,z./*create source
D1000
L
W MODIFICATION COMPLETE
W^/$
Sattach,opl=opl871/un=install
D1000
L
W^/$
Smodify,p=npl,lo=e,z./*oplfile opl/*edit iomod
D1000
L
W MODIFICATION COMPLETE
W^/$
Scompass,i,b=outlgo,l=0,s=systext,s=psstext
D1000
L
WCPU SECONDS  ASSEMBLY TIME
W^/$
D2000
Lnew,fib/nd
W^/$
Ltext
W ENTER TEXT MODE
W\\r
I250 \\r =====
PRGM FIB;
#-------------------------------------------------------#
#  CALCULATE AND PRINTS THE FIRST 10 FIBONACCI NUMBERS  #
#-------------------------------------------------------#
BEGIN

  XREF
    BEGIN
    PROC FLUSH;   # FLUSH OUTPUT BUFFER              #
    PROC OUT;     # OUTPUT FIBONACCI INDEX AND VALUE #
    END

  ITEM I1     U = 0;
  ITEM I2     U = 1;
  ITEM I3     U;
  ITEM N      U;

  FOR N = 1 STEP 1 UNTIL 10 DO
  BEGIN
    OUT(N, I2);
    I3 = I1 + I2;
    I1 = I2;
    I2 = I3;
  END

  FLUSH;

END
TERM
=====
S\x14
W EXIT TEXT MODE
W^/$
D1000
Ssympl,i=fib,l=0
D1000
L
W \\-SYMPL\\-  TOTAL CP SECONDS
W^/$
Sload,lgo,outlgo
D1000
L
W^LDR>\\? $
Sexecute,fib
D1000
L
WEXECUTE,FIB
W^/$

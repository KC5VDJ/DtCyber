.PROC,SPAWN,SYSUN=SYSTEMX,
            SYSPW=SYSTEMX,
            LIBUN=MAILER,
            MAILLIB=MAILLIB,
            PMUN=MAILER.
.**********************************************************************
.*
.*    SPAWN - SPAWN THE JOBS WHICH COMPRISE THE NETWORK MAIL SERVER
.*
.*    PARAMETER DEFINITIONS:  
.*
.*      SYSUN   - USER NAME UNDER WHICH THE JOBS OF THE POSTAL SYSTEM 
.*                RUN.  NORMALLY, THIS MUST BE SYSTEMX.
.*
.*      SYSPW   - PASSWORD ASSOCIATED WITH SYSUN. 
.*
.*      LIBUN   - USER NAME UNDER WHICH THE UTILITY LIBRARY AND
.*                ROUTING TABLES ARE STORED.
.*
.*      MAILLIB - NAME OF THE FILE WHICH CONTAINS THE UTILITY LIBRARY.
.*
.*      TZ      - TIME ZONE.
.*
.*      PMUN    - USER NAME OF THE POSTMASTER.  DEAD LETTERS AND
.*                POSTMORTEM DAYFILES WILL BE ROUTED HERE.
.*
.**********************************************************************
$SETJOB,SERVER,DC=NO.
$NORERUN. 
$SETTL,*. 
$SETASL,*.
$SETJSL,*.
.*
.*  DROP ANY SUBJOBS THAT MIGHT STILL BE RUNNING
.*
$NOEXIT.
$DROP,UJN=IBXLATE.
$DROP,UJN=OBXLATE.
$DROP,UJN=BITGATE.
$DROP,UJN=DOMGATE.
$DROP,UJN=MLRGATE.
$ONEXIT.
.*
.*  SPAWN THE SUBJOBS
.*
$ROUTE,IBXLATE,DC=NO,OT=SYOT.  INBOUND  NAME TRANSLATOR
$ROUTE,OBXLATE,DC=NO,OT=SYOT.  OUTBOUND NAME TRANSLATOR
$ROUTE,BITGATE,DC=NO,OT=SYOT.  BITNET GATEWAY
$ROUTE,DOMGATE,DC=NO,OT=SYOT.  DOMAIN GATEWAY
$ROUTE,MLRGATE,DC=NO,OT=SYOT.  MAILER GATEWAY
$REVERT.
$EXIT.
$DAYFILE,FAILURE.
$ROUTE,FAILURE,DC=WT,UN=PMUN,UJN=BUG.
.**********************************************************************
.*                                                                    *
.*  IBXLATE - THIS JOB TRANSLATES DESTINATION ADDRESSES IN INBOUND    *
.*            BITNET MAIL.                                            *
.*                                                                    *
.**********************************************************************
.DATA,IBXLATE.
IBXLATE.
$USER,SYSUN,SYSPW.
$SETJOB,IBXLATE,DC=NO.
$NORERUN. 
$SETTL,*. 
$SETASL,*.
$SETJSL,*.
.*
.*  ADD MAIL LIBRARY TO GLOBAL LIBRARY LIST
.*
$ATTACH,LIB=MAILLIB/UN=LIBUN. 
$COPY,LIB,MAILLIB.
$RETURN,LIB.
$LIBRARY,MAILLIB/A. 
.*
.*  BUILD ROUTING TABLE
.*
$GET,ROUTES=IBXLRTE,WORLD/UN=LIBUN.
$SKIPEI,ROUTES.
$COPY,WORLD,ROUTES.
$PACK,ROUTES.
$SETFS,ROUTES/FS=NAD.
.*
.*  GET SERVER, NODE, ALIASES, AND ZONE FILES, AND
.*  INITIALIZE SEQUENC FILE
.*
$GET,HOSTSVR,HOSTNOD,HOSTALI,ZONE/UN=LIBUN.
$NOTE,SEQUENC./1
.*
$SETFS,HOSTSVR/FS=NAD.
$SETFS,HOSTNOD/FS=NAD.
$SETFS,HOSTALI/FS=NAD.
$SETFS,ZONE   /FS=NAD.
$SETFS,SEQUENC/FS=NAD.
.*
.*  TRANSLATE NAMES 
.*
$WHILE, .NOT. SW1, LOOP.
  DEQUEUE,MESSAGE,DC=WT,UN=NETOPS,FC=IX,SC=S.
  $IF, FILE (MESSAGE, AS), INBOUND.
    $IBXLATE,MESSAGE,HOSTSVR,HOSTNOD,HOSTALI,ZONE,OUTMSG,UNKNOWN.
    MLROUTE,OUTMSG,ROUTES,HOSTSVR,HOSTNOD,ZONE,SEQUENC.
    $IF, .NOT. FILE (UNKNOWN, ZL), REPLY.
      MLROUTE,UNKNOWN,ROUTES,HOSTSVR,HOSTNOD,ZONE,SEQUENC.
    $ENDIF, REPLY.
    $SKIP, ENDLOOP. 
  $ENDIF, INBOUND.
  $ROLLOUT, 120.
  $SKIP, ENDLOOP.
.*
.*  CATCH DEQUEUE ERRORS
.*
  $EXIT.
  $IF, EF .EQ. ODE. $SKIP, TERMINATE.
  $IF, FILE (MESSAGE, AS), MISQUEUED.
    $ROUTE,MESSAGE,DC=WT,UN=PMUN,FC=ER,UJN=MISQ.
  $ENDIF, MISQUEUED.
$ENDIF, ENDLOOP.
$CLEAR.
$ENDW, LOOP.
$EXIT.
$ENDIF, TERMINATE.
$IF, EF .NE. ODE, FAILURE.
  $DAYFILE,FAILURE. 
  $ROUTE,FAILURE,DC=WT,UN=PMUN,UJN=IBXLATE.
$ENDIF, FAILURE.
.**********************************************************************
.*                                                                    *
.*  OBXLATE - THIS JOB TRANSLATES SOURCE ADDRESSES IN OUTBOUND MAIL   *
.*                                                                    *
.**********************************************************************
.DATA,OBXLATE.
OBXLATE.
$USER,SYSUN,SYSPW.
$SETJOB,OBXLATE,DC=DF.
$NORERUN. 
$SETTL,*. 
$SETASL,*.
$SETJSL,*.
.*
.*  ADD MAIL LIBRARY TO GLOBAL LIBRARY LIST
.*
$ATTACH,LIB=MAILLIB/UN=LIBUN. 
$COPY,LIB,MAILLIB.
$RETURN,LIB.
$LIBRARY,MAILLIB/A. 
.*
.*  BUILD ROUTING TABLE
.*
$GET,ROUTES=OBXLRTE,WORLD/UN=LIBUN.
$SKIPEI,ROUTES.
$COPY,WORLD,ROUTES.
$PACK,ROUTES.
$SETFS,ROUTES/FS=NAD.
.*
.*  GET SERVER, NODE, ALIASES, AND ZONE FILES, AND
.*  INITIALIZE SEQUENC FILE
.*
$GET,HOSTSVR,HOSTNOD,OBXLALI,ZONE/UN=LIBUN.
$NOTE,SEQUENC./1
.*
$SETFS,HOSTSVR/FS=NAD.
$SETFS,HOSTNOD/FS=NAD.
$SETFS,OBXLALI/FS=NAD.
$SETFS,ZONE   /FS=NAD.
$SETFS,SEQUENC/FS=NAD.
.*
.*  TRANSLATE NAMES 
.*
$WHILE, .NOT. SW1, LOOP.
  DEQUEUE,MESSAGE,DC=WT,UN=NETOPS,FC=OX,SC=S.
  $IF, FILE (MESSAGE, AS), OUTBOUND.
    $OBXLATE,MESSAGE,HOSTSVR,HOSTNOD,OBXLALI,ZONE,OUTMSG,UNKNOWN.
    MLROUTE,OUTMSG,ROUTES,HOSTSVR,HOSTNOD,ZONE,SEQUENC.
    $IF, .NOT. FILE (UNKNOWN, ZL), REPLY.
      MLROUTE,UNKNOWN,ROUTES,HOSTSVR,HOSTNOD,ZONE,SEQUENC.
    $ENDIF, REPLY.
    $SKIP, ENDLOOP. 
  $ENDIF, OUTBOUND. 
  $ROLLOUT, 120.
  $SKIP, ENDLOOP.
.*
.*  CATCH DEQUEUE ERRORS
.*
  $EXIT.
  $IF, EF .EQ. ODE. $SKIP, TERMINATE.
  $IF, FILE (MESSAGE, AS), MISQUEUED.
    $ROUTE,MESSAGE,DC=WT,UN=PMUN,FC=ER,UJN=MISQ.
  $ENDIF, MISQUEUED.
$ENDIF, ENDLOOP.
$CLEAR.
$ENDW, LOOP.
$EXIT.
$ENDIF, TERMINATE.
$IF, EF .NE. ODE, FAILURE.
  $DAYFILE,FAILURE. 
  $ROUTE,FAILURE,DC=WT,UN=PMUN,UJN=OBXLATE.
$ENDIF, FAILURE.
.**********************************************************************
.*                                                                    *
.*  BITGATE - THIS JOB IS THE INBOUND BITNET GATEWAY                  *
.*                                                                    *
.**********************************************************************
.DATA,BITGATE.
BITGATE.
$USER,SYSUN,SYSPW.
$SETJOB,BITGATE,DC=NO.
$NORERUN. 
$SETTL,*. 
$SETASL,*.
$SETJSL,*.
.*
.*  ADD MAIL LIBRARY TO GLOBAL LIBRARY LIST
.*
$ATTACH,LIB=MAILLIB/UN=LIBUN.
$COPY,LIB,MAILLIB.
$RETURN,LIB.
$LIBRARY,MAILLIB/A.
.*
.*  BUILD ROUTING TABLE
.*
$GET,ROUTES=BITNRTE,WORLD/UN=LIBUN.
$SKIPEI,ROUTES.
$COPY,WORLD,ROUTES.
$PACK,ROUTES.
$SETFS,ROUTES/FS=NAD.
.*
.*  GET SERVER, NODE, AND ZONE FILES, AND INITIALIZE SEQUENC FILE
.*
$GET,HOSTSVR,HOSTNOD,ZONE/UN=LIBUN.
$NOTE,SEQUENC./1
.*
$SETFS,HOSTSVR/FS=NAD.
$SETFS,HOSTNOD/FS=NAD.
$SETFS,ZONE   /FS=NAD.
$SETFS,SEQUENC/FS=NAD.
.*
.*  PROCESS INBOUND BITNET MAIL
.*
$WHILE, .NOT. SW1, LOOP.
.*
.*  PROCESS INBOUND, TEXTUAL BITNET MAIL
.*
  DEQUEUE,MESSAGE,L=INFO,DC=WT,DUI=377772,FC=ML.
  $IF, FILE (MESSAGE, AS). $SKIP, BITNET.
.*
.*  PROCESS INBOUND, BINARY BITNET MAIL 
.*
  DEQUEUE,BINARY,L=INFO,DC=WT,DUI=377772,FC=BF. 
  $IF, FILE (BINARY, AS), BINARY.
    $DSKD,BINARY,BODY,ASCII.
    $SKIP, PREFACE.
    $EXIT.
    $REWIND,BINARY,BODY.
    $NETR,BINARY,BODY,ASCII.
    $SKIP, PREFACE.
    $EXIT.
    $RENAME,BODY=BINARY.
    $SKIP,PREFACE.
  $ENDIF, BINARY. 
  $ROLLOUT, 120.
  $SKIP, ENDLOOP. 
.*
.*  PREFACE THE MESSAGE BODY WITH HEADER/BODY SEPARATOR LINE
.*
  $ENDIF, PREFACE.
  $NOTE,MESSAGE,NR./
  $REWIND,BODY.
  $COPY,BODY,MESSAGE.
  $PACK,MESSAGE.
.*
.*  PROCESS A BITNET MESSAGE
.*
  $ENDIF, BITNET. 
  BIT2SMT,MESSAGE,INFO,HOSTNOD,ZONE,OUTMSG.
  MLROUTE,OUTMSG,ROUTES,HOSTSVR,HOSTNOD,ZONE,SEQUENC.
  $SKIP, ENDLOOP. 
.*
.*  CATCH DEQUEUE ERRORS
.*
  $EXIT.
  $IF, EF .EQ. ODE. $SKIP, TERMINATE. 
  $IF, FILE (MESSAGE, AS), MISQUEUED. 
    $ROUTE,MESSAGE,DC=WT,UN=PMUN,FC=ER,UJN=MISQ.
  $ENDIF, MISQUEUED.
.*
  $ENDIF, ENDLOOP.
  $CLEAR. 
$ENDW, LOOP.
$EXIT.
$ENDIF, TERMINATE.
$IF, EF .NE. ODE, FAILURE.
  $DAYFILE,FAILURE. 
  $ROUTE,FAILURE,DC=WT,UN=PMUN,UJN=BITGATE.
$ENDIF, FAILURE.
.**********************************************************************
.*                                                                    *
.*  MLRGATE - THIS JOB PROCESSES OUTBOUND MAILER MESSAGES             *
.*                                                                    *
.**********************************************************************
.DATA,MLRGATE.
MLRGATE.
$USER,SYSUN,SYSPW.
$SETJOB,MLRGATE,DC=NO.
$NORERUN. 
$SETTL,*. 
$SETASL,*.
$SETJSL,*.
.*
.*  ADD MAIL LIBRARY TO GLOBAL LIBRARY LIST
.*
$ATTACH,LIB=MAILLIB/UN=LIBUN. 
$COPY,LIB,MAILLIB.
$RETURN,LIB.
$LIBRARY,MAILLIB/A. 
.*
.*  GET ROUTING TABLE
.*
$GET,ROUTES=MAILRTE/UN=LIBUN.
$SETFS,ROUTES/FS=NAD.
.*
.*  GET SERVER, NODE, AND ZONE FILES, AND INITIALIZE SEQUENC FILE
.*
$GET,HOSTSVR,HOSTNOD,ZONE/UN=LIBUN.
$NOTE,SEQUENC./1
.*
$SETFS,HOSTSVR/FS=NAD.
$SETFS,HOSTNOD/FS=NAD.
$SETFS,ZONE   /FS=NAD.
$SETFS,SEQUENC/FS=NAD.
.*
.*  PROCESS MAIL FROM MAIL AGENTS
.*
$WHILE, .NOT. SW1, LOOP.
.*
.*  DEQUEUE MAIL FROM CYBER MAILER
.*
  DEQUEUE,MESSAGE,DC=WT,DUN=$$$MAILER$,DUI=377772,FC=OM.
  $IF, FILE (MESSAGE, AS). $SKIP, REROUTE.
.*
.*  ARRIVE HERE IF NO MAIL DEQUEUED
.*
  $ROLLOUT, 120.
  $SKIP, ENDLOOP.
.*
.*  PROCESS AND REROUTE DEQUEUED MAIL
.*
  $ENDIF, REROUTE.
    RFC2SMT,MESSAGE,HOSTNOD,ZONE,OUTMSG.
    MLROUTE,OUTMSG,ROUTES,HOSTSVR,HOSTNOD,ZONE,SEQUENC.
    $SKIP, ENDLOOP. 
  $ENDIF, MAILER.
.*
.*  CATCH DEQUEUE ERRORS
.*
  $EXIT.
  $IF, EF .EQ. ODE. $SKIP, TERMINATE.
  $IF, FILE (MESSAGE, AS), MISQUEUED.
    $ROUTE,MESSAGE,DC=WT,UN=PMUN,FC=ER,UJN=MISQ.
  $ENDIF, MISQUEUED.
$ENDIF, ENDLOOP.
$CLEAR.
$ENDW, LOOP.
$EXIT.
$ENDIF, TERMINATE.
$IF, EF .NE. ODE, FAILURE.
  $DAYFILE,FAILURE. 
  $ROUTE,FAILURE,DC=WT,UN=PMUN,UJN=MLRGATE.
$ENDIF, FAILURE.
.**********************************************************************
.*                                                                    *
.*  DOMGATE - THIS JOB IS THE INBOUND MAIL GATEWAY FOR THE LOCAL      *
.*            DOMAIN.                                                 *
.*                                                                    *
.**********************************************************************
.DATA,DOMGATE.
DOMGATE.
$USER,SYSUN,SYSPW.
$SETJOB,DOMGATE,DC=NO.
$NORERUN. 
$SETTL,*. 
$SETASL,*.
$SETJSL,*.
.*
.*  CREATE PROCEDURE LIBRARY
.*
$COPY,INPUT,SYSTEM. 
$SETFS,SYSTEM/FS=NAD.
.*
.*  ADD MAIL LIBRARY TO GLOBAL LIBRARY LIST
.*
$ATTACH,LIB=MAILLIB/UN=LIBUN. 
$COPY,LIB,MAILLIB.
$RETURN,LIB.
$LIBRARY,MAILLIB/A. 
.*
.*  BUILD SERVER, NODE, ALIASES, ROUTES, AND ZONE FILES, AND
.*  INITIALIZE SEQUENC FILE
.*
$GET,ROUTES=DOMNRTE,HOSTSVR,HOSTNOD,HOSTALI,WORLD,ZONE/UN=LIBUN.
$SKIPEI,ROUTES.
$COPY,WORLD,ROUTES. 
$PACK,ROUTES.
.*
$NOTE,SEQUENC./1
.*
.*  CREATE SYSTEM SERVER, NODE, AND ALIASES FILES
.*
$NOTE,SYSTNOD./SYSTEM
$NOTE,SYSTALI./SYSTEM
$NOTE,SYSTSVR./S^E^R^V^E^R@ASYSTEM
.*
$SETFS,HOSTSVR/FS=NAD.
$SETFS,HOSTNOD/FS=NAD.
$SETFS,HOSTALI/FS=NAD.
$SETFS,ROUTES /FS=NAD.
$SETFS,ZONE   /FS=NAD.
$SETFS,SEQUENC/FS=NAD.
$SETFS,SYSTSVR/FS=NAD.
$SETFS,SYSTNOD/FS=NAD.
$SETFS,SYSTALI/FS=NAD.
.*
.*  PROCESS GENERIC MAIL SENT TO THIS DOMAIN
.*
$WHILE, .NOT. SW1, LOOP.
  DEQUEUE,MESSAGE,DC=WT,UN=NETOPS,FC=ID,SC=S.
  $IF, FILE (MESSAGE, AS), DOMAIN.
    MLROUTE,MESSAGE,ROUTES,HOSTSVR,HOSTNOD,ZONE,SEQUENC.
    $SKIP, ENDLOOP. 
  $ENDIF, DOMAIN.
  $ROLLOUT, 120.
  $SKIP, ENDLOOP.
.*
.*  CATCH DEQUEUE ERRORS
.*
  $EXIT.
  $IF, EF .EQ. ODE. $SKIP, TERMINATE.
  $IF, FILE (MESSAGE, AS), MISQUEUED.
    $ROUTE,MESSAGE,DC=WT,UN=PMUN,FC=ER,UJN=MISQ.
  $ENDIF, MISQUEUED.
$ENDIF, ENDLOOP.
$CLEAR.
$ENDW, LOOP.
$EXIT.
$ENDIF, TERMINATE.
$IF, EF .NE. ODE, FAILURE.
  $DAYFILE,FAILURE. 
  $ROUTE,FAILURE,DC=WT,UN=PMUN,UJN=DOMGATE.
$ENDIF, FAILURE.
.EOR
.**********************************************************************
.*                                                                    *
.*  LIBRARY OF PROCEDURES FOR PROCESSING MAIL DESTINED FOR THIS       *
.*  DOMAIN.                                                           *
.*                                                                    *
.**********************************************************************
.PROC,MAILER,M=MESSAGE.
.**********************************************************************
.*
.*    MAILER - PROCESS INBOUND MAILER MESSAGES
.*
.*    PARAMETERS: 
.*
.*      M - FILE CONTAINING MESSAGE TO DELIVER
.*
.**********************************************************************
$RETURN,ERROR.
SMT2MLR,M,HOSTNOD,HOSTALI,ZONE,OUTMSG,RCPTS,ERROR.
$IF, .NOT. FILE (ERROR, ZL). $SKIP, EXIT.
*MARK*
$RETURN,ERROR.
$MAILER,ERROR/I-,V-,P-,N+.TRANSMIT OUTMSG [RCPTS]:NOH:NOS;QUIT
$IF, FILE (ERROR, ZL), NOERRORS.
  $RETURN,M.
  $REVERT.
$ENDIF, NOERRORS.
.*
.*  PROCESS MAILING ERRORS
.*
$SKIP, EXIT.
$EXIT.
  $DAYFILE,DAY,FR=$*MARK*$.
  $SKIPEI,ERROR.
  $NOTE,ERROR,NR./ M^A^I^L ^U^T^I^L^I^T^Y ^A^B^O^R^T^E^D.
  $NOTE,ERROR,NR./ P^A^R^T^I^A^L ^D^A^Y^F^I^L^E ^F^O^L^L^O^W^S@D/
  $REWIND,DAY.
  $COPY,DAY,ERROR.
  $PACK,ERROR.
$ENDIF, EXIT.
REJECT,M,ERROR,HOSTSVR,HOSTNOD,ZONE,OUTMSG. 
$RETURN,M.
MLROUTE,OUTMSG,ROUTES,HOSTSVR,HOSTNOD,ZONE,SEQUENC.
$REVERT.
$EXIT.
$REVERT.
.EOR
.PROC,REFLECT,M=MESSAGE,B=BODY.
.**********************************************************************
.*
.*    REFLECT - PROCESS MESSAGES SENT TO THE REFLECTOR
.*
.**********************************************************************
$NOTE,SUBJ./R^E^F^L^E^C^T^I^O^N ^R^E^Q^U^E^S^T
$NOTE,RESP,NR./T^H^I^S ^W^A^S ^R^E^C^E^I^V^E^D ^F^R^O^M ^Y^O^U@D
$NOTE,RESP,NR./===========================
$REWIND,B.
$COPY,B,RESP.
$PACK,RESP.
REPLY,M,SUBJ,RESP,SYSTSVR,SYSTNOD,ZONE,REPMSG.
MLROUTE,REPMSG,ROUTES,SYSTSVR,SYSTNOD,ZONE,SEQUENC.
$REVERT.
$EXIT.
$REVERT.
.EOR
.PROC,REGISTR,M=MESSAGE,B=BODY.
.**********************************************************************
.*
.*    REGISTR - PROCESS DATA BASE REGISTRATION REQUESTS
.*
.**********************************************************************
$DBMAN,B,RESULT.
$NOTE,SUBJ./N^A^M^E ^S^E^R^V^E^R ^R^E^Q^U^E^S^T
REPLY,M,SUBJ,RESULT,SYSTSVR,SYSTNOD,ZONE,REPMSG.
MLROUTE,REPMSG,ROUTES,SYSTSVR,SYSTNOD,ZONE,SEQUENC.
$REVERT.
$EXIT.
$REVERT.
.EOR
.PROC,SERVER,M=MESSAGE,B=BODY.
.**********************************************************************
.*
.*    SERVER - PROCESS MESSAGES ADDRESSED TO SERVER@SYSTEM
.*
.**********************************************************************
$ROUTE,MESSAGE,DC=WT,UN=PMUN,FC=ER,UJN=SERVER.
$REVERT.
$EXIT.
$REVERT.
.EOR
.PROC,SYSTEM,M=MESSAGE.
.**********************************************************************
.*
.*    SYSTEM - PROCESS INBOUND SYSTEM MESSAGES
.*
.*    PARAMETERS: 
.*
.*      M - FILE CONTAINING MESSAGE TO PROCESS
.*
.**********************************************************************
SMT2MLR,M,SYSTNOD,SYSTALI,ZONE,OUTMSG,RCPTS.
CALL,OUTMSG,ROUTES,RCPTS,SYSTSVR,SYSTNOD,ZONE,SEQUENC.
$RETURN,M.
$REVERT.
$EXIT.
$REVERT.
